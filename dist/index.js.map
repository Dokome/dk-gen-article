{"version":3,"file":"index.js","sources":["../src/lib/random.js","../src/lib/generator.js","../src/index.js"],"sourcesContent":["// 随机模块\r\nexport const randomInt = (min, max) => {\r\n  const p = Math.random()\r\n  return Math.floor(min * (1 - p) + max * p)\r\n}\r\n\r\nexport const createRandomPick = target => {\r\n  const copy = target.slice()\r\n  const len = copy.length - 1\r\n\r\n  const randomPick = () => {\r\n    const index = randomInt(0, len)\r\n    const picked = copy[index]\r\n    ;[copy[index], copy[len]] = [copy[len], copy[index]]\r\n\r\n    return picked\r\n  }\r\n\r\n  // 除去第一次的影响\r\n  randomPick()\r\n\r\n  return randomPick\r\n}\r\n","import { createRandomPick, randomInt } from './random.js'\r\n\r\nconst sentence = (pick, replacer) => {\r\n  let ret = pick()\r\n\r\n  for (const key in replacer) {\r\n    ret = ret.replace(\r\n      new RegExp(`{{${key}}}`, 'g'),\r\n      typeof replacer[key] === 'function' ? replacer[key]() : replacer[key]\r\n    )\r\n  }\r\n\r\n  return ret\r\n}\r\n\r\n// 文章生成\r\nexport const generate = (title, { corpus, min = 5000, max = 10000 }) => {\r\n  const lenOfArticles = randomInt(min, max)\r\n  const { famous, bosh_before, bosh, said, conclude } = corpus\r\n  const [pickFamous, pickBoshBefore, pickBosh, pickSaid, pickConclude] = [\r\n    famous,\r\n    bosh_before,\r\n    bosh,\r\n    said,\r\n    conclude,\r\n  ].map(item => createRandomPick(item))\r\n\r\n  const article = []\r\n  let lenOfTotal = 0\r\n\r\n  while (lenOfTotal < lenOfArticles) {\r\n    const lenOfSection = randomInt(200, 500)\r\n    let section = ''\r\n\r\n    while (section.length < lenOfSection || !/[。？]$/.test(section)) {\r\n      const n = randomInt(0, 100)\r\n      if (n < 20) {\r\n        section += sentence(pickFamous, {\r\n          said: pickSaid,\r\n          conclude: pickConclude,\r\n          title,\r\n        })\r\n      } else if (n < 50) {\r\n        section +=\r\n          sentence(pickBoshBefore, { title }) + sentence(pickBosh, { title })\r\n      } else {\r\n        section += sentence(pickBosh, { title })\r\n      }\r\n    }\r\n\r\n    lenOfTotal += section.length\r\n    article.push(section)\r\n  }\r\n\r\n  return article\r\n}\r\n","import { generate } from './lib/generator.js'\r\nimport data from './corpus/data.json' assert { type: 'json' }\r\n\r\n// 获取当前脚本的 url\r\nconst corpus = data\r\nconst run = title => generate(title, { corpus })\r\n\r\nexport { run }\r\n"],"names":["randomInt","min","max","p","Math","random","floor","sentence","pick","replacer","ret","key","replace","RegExp","generate","title","corpus","lenOfArticles","famous","bosh_before","bosh","said","conclude","pickFamous","pickBoshBefore","pickBosh","pickSaid","pickConclude","map","item","target","copy","slice","len","length","randomPick","index","picked","createRandomPick","article","lenOfTotal","lenOfSection","section","test","n","push"],"mappings":"kCACO,MAAMA,EAAY,CAACC,EAAKC,KAC7B,MAAMC,EAAIC,KAAKC,SACf,OAAOD,KAAKE,MAAML,GAAO,EAAIE,GAAKD,EAAMC,EAAC,ECDrCI,EAAW,CAACC,EAAMC,KACtB,IAAIC,EAAMF,IAEV,IAAK,MAAMG,KAAOF,EAChBC,EAAMA,EAAIE,QACR,IAAIC,OAAO,KAAKF,MAAS,KACA,mBAAlBF,EAASE,GAAsBF,EAASE,KAASF,EAASE,IAIrE,OAAOD,GAIII,EAAW,CAACC,GAASC,SAAQf,MAAM,IAAMC,MAAM,QAC1D,MAAMe,EAAgBjB,EAAUC,EAAKC,IAC/BgB,OAAEA,EAAMC,YAAEA,EAAWC,KAAEA,EAAIC,KAAEA,EAAIC,SAAEA,GAAaN,GAC/CO,EAAYC,EAAgBC,EAAUC,EAAUC,GAAgB,CACrET,EACAC,EACAC,EACAC,EACAC,GACAM,KAAIC,GDnBwBC,KAC9B,MAAMC,EAAOD,EAAOE,QACdC,EAAMF,EAAKG,OAAS,EAEpBC,EAAa,KACjB,MAAMC,EAAQpC,EAAU,EAAGiC,GACrBI,EAASN,EAAKK,GAGpB,OAFEL,EAAKK,GAAQL,EAAKE,IAAQ,CAACF,EAAKE,GAAMF,EAAKK,IAEtCC,GAMT,OAFAF,IAEOA,GCIOG,CAAiBT,KAEzBU,EAAU,GAChB,IAAIC,EAAa,EAEjB,KAAOA,EAAavB,GAAe,CACjC,MAAMwB,EAAezC,EAAU,IAAK,KACpC,IAAI0C,EAAU,GAEd,KAAOA,EAAQR,OAASO,IAAiB,QAAQE,KAAKD,IAAU,CAC9D,MAAME,EAAI5C,EAAU,EAAG,KAErB0C,GADEE,EAAI,GACKrC,EAASgB,EAAY,CAC9BF,KAAMK,EACNJ,SAAUK,EACVZ,UAEO6B,EAAI,GAEXrC,EAASiB,EAAgB,CAAET,UAAWR,EAASkB,EAAU,CAAEV,UAElDR,EAASkB,EAAU,CAAEV,SAEnC,CAEDyB,GAAcE,EAAQR,OACtBK,EAAQM,KAAKH,EACd,CAED,OAAOH,GClDT,MAAMvB,kvMACMD,GAASD,EAASC,EAAO,CAAEC"}